<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="34" passed="34" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-06T08:41:58 GMT-07:00" name="Parabank Test Suite" finished-at="2025-08-06T08:43:44 GMT-07:00" duration-ms="106423">
    <groups>
    </groups>
    <test started-at="2025-08-06T08:41:58 GMT-07:00" name="ChromeTests" finished-at="2025-08-06T08:43:40 GMT-07:00" duration-ms="102095">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:41:58 GMT-07:00" name="setup" finished-at="2025-08-06T08:42:16 GMT-07:00" duration-ms="18006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:42:40 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:40 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:42:40 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:40 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:42:40 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:40 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="loginWithInvalidPassword()[pri:1, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:42:40 GMT-07:00" name="loginWithInvalidPassword" finished-at="2025-08-06T08:42:52 GMT-07:00" duration-ms="12510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:42:52 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:52 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidPassword status=SUCCESS method=LoginTest.loginWithInvalidPassword()[pri:1, instance:tests.LoginTest@268f106e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="loginWithUnregisteredUser()[pri:2, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:42:52 GMT-07:00" name="loginWithUnregisteredUser" finished-at="2025-08-06T08:43:03 GMT-07:00" duration-ms="10450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUnregisteredUser -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:42:52 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:52 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithUnregisteredUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:03 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:03 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithUnregisteredUser status=SUCCESS method=LoginTest.loginWithUnregisteredUser()[pri:2, instance:tests.LoginTest@268f106e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="loginWithEmptyFields()[pri:3, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:03 GMT-07:00" name="loginWithEmptyFields" finished-at="2025-08-06T08:43:16 GMT-07:00" duration-ms="12991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyFields -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:03 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:43:03 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithEmptyFields() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:16 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:16 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyFields status=SUCCESS method=LoginTest.loginWithEmptyFields()[pri:3, instance:tests.LoginTest@268f106e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="loginWithInvalidEmailFormat()[pri:4, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:16 GMT-07:00" name="loginWithInvalidEmailFormat" finished-at="2025-08-06T08:43:28 GMT-07:00" duration-ms="12448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmailFormat -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:16 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:43:16 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithInvalidEmailFormat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:28 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:28 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidEmailFormat status=SUCCESS method=LoginTest.loginWithInvalidEmailFormat()[pri:4, instance:tests.LoginTest@268f106e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="loginWithValidCredentials()[pri:5, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:28 GMT-07:00" name="loginWithValidCredentials" finished-at="2025-08-06T08:43:40 GMT-07:00" duration-ms="11221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:28 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:43:28 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:40 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:40 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=SUCCESS method=LoginTest.loginWithValidCredentials()[pri:5, instance:tests.LoginTest@268f106e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:40 GMT-07:00" name="teardown" finished-at="2025-08-06T08:43:40 GMT-07:00" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.LoginTest@268f106e]" started-at="2025-08-06T08:43:40 GMT-07:00" name="endLog" finished-at="2025-08-06T08:43:40 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RequestLoanTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:18 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:18 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:18 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RequestLoanTest.testLoanExceedingLimit()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testLoanExceedingLimit()[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:18 GMT-07:00" name="testLoanExceedingLimit" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoanExceedingLimit -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:18 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoanExceedingLimit status=SUCCESS method=RequestLoanTest.testLoanExceedingLimit()[pri:0, instance:tests.RequestLoanTest@496bc455] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="testMissingLoanDetails()[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:18 GMT-07:00" name="testMissingLoanDetails" finished-at="2025-08-06T08:42:19 GMT-07:00" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingLoanDetails -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:18 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RequestLoanTest.testMissingLoanDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:19 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:19 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMissingLoanDetails status=SUCCESS method=RequestLoanTest.testMissingLoanDetails()[pri:0, instance:tests.RequestLoanTest@496bc455] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:26 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RequestLoanTest.testValidLoanRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testValidLoanRequest()[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:26 GMT-07:00" name="testValidLoanRequest" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLoanRequest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:26 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLoanRequest status=SUCCESS method=RequestLoanTest.testValidLoanRequest()[pri:0, instance:tests.RequestLoanTest@496bc455] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.RequestLoanTest@496bc455]" started-at="2025-08-06T08:42:26 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.RequestLoanTest -->
      <class name="tests.CustomerSupportTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:22 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:22 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:22 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:22 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:22 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:22 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.CustomerSupportTest.testSubmitFormWithEmptyFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testSubmitFormWithEmptyFields()[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:22 GMT-07:00" name="testSubmitFormWithEmptyFields" finished-at="2025-08-06T08:42:23 GMT-07:00" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitFormWithEmptyFields -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:23 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:23 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.CustomerSupportTest.testSubmitFormWithValidDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:23 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:23 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubmitFormWithEmptyFields status=SUCCESS method=CustomerSupportTest.testSubmitFormWithEmptyFields()[pri:0, instance:tests.CustomerSupportTest@59402b8f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="testSubmitFormWithValidDetails()[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:23 GMT-07:00" name="testSubmitFormWithValidDetails" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitFormWithValidDetails -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:24 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubmitFormWithValidDetails status=SUCCESS method=CustomerSupportTest.testSubmitFormWithValidDetails()[pri:0, instance:tests.CustomerSupportTest@59402b8f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:26 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.CustomerSupportTest.testVerifySuccessMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testVerifySuccessMessage()[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:26 GMT-07:00" name="testVerifySuccessMessage" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="1079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifySuccessMessage -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:27 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySuccessMessage status=SUCCESS method=CustomerSupportTest.testVerifySuccessMessage()[pri:0, instance:tests.CustomerSupportTest@59402b8f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.CustomerSupportTest@59402b8f]" started-at="2025-08-06T08:42:27 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.CustomerSupportTest -->
      <class name="tests.AccountTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:27 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:27 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AccountTest.viewCheckingAccountSummary() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:27 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="viewCheckingAccountSummary()[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:27 GMT-07:00" name="viewCheckingAccountSummary" finished-at="2025-08-06T08:42:31 GMT-07:00" duration-ms="3457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewCheckingAccountSummary -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:31 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:31 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewCheckingAccountSummary status=SUCCESS method=AccountTest.viewCheckingAccountSummary()[pri:0, instance:tests.AccountTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:31 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:31 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AccountTest.viewSavingsAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="viewSavingsAccountSummary()[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:31 GMT-07:00" name="viewSavingsAccountSummary" finished-at="2025-08-06T08:42:40 GMT-07:00" duration-ms="9001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewSavingsAccountSummary -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:31 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:31 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:40 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:40 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewSavingsAccountSummary status=SUCCESS method=AccountTest.viewSavingsAccountSummary()[pri:0, instance:tests.AccountTest@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.AccountTest@31ea9581]" started-at="2025-08-06T08:42:40 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:40 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.AccountTest -->
      <class name="tests.TransactionSearchTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:19 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:19 GMT-07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:19 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:19 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSearchByAmount()[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:19 GMT-07:00" name="testSearchByAmount" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="1245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByAmount -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:19 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:19 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.TransactionSearchTest.testSearchByAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:20 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchByAmount status=SUCCESS method=TransactionSearchTest.testSearchByAmount()[pri:0, instance:tests.TransactionSearchTest@183ec003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="testSearchByDate()[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:20 GMT-07:00" name="testSearchByDate" finished-at="2025-08-06T08:42:22 GMT-07:00" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByDate -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:20 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.TransactionSearchTest.testSearchByDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:22 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:22 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchByDate status=SUCCESS method=TransactionSearchTest.testSearchByDate()[pri:0, instance:tests.TransactionSearchTest@183ec003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.TransactionSearchTest@183ec003]" started-at="2025-08-06T08:42:22 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:22 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.TransactionSearchTest -->
      <class name="tests.FundsTransferTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:16 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:16 GMT-07:00" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:16 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:16 GMT-07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:16 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:16 GMT-07:00" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FundsTransferTest.testInvalidFundTransfer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testInvalidFundTransfer()[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:16 GMT-07:00" name="testInvalidFundTransfer" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="1983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidFundTransfer -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:18 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidFundTransfer status=SUCCESS method=FundsTransferTest.testInvalidFundTransfer()[pri:0, instance:tests.FundsTransferTest@7c137fd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:24 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FundsTransferTest.testValidFundTransfer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testValidFundTransfer()[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:24 GMT-07:00" name="testValidFundTransfer" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="1732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFundTransfer -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:26 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidFundTransfer status=SUCCESS method=FundsTransferTest.testValidFundTransfer()[pri:0, instance:tests.FundsTransferTest@7c137fd5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.FundsTransferTest@7c137fd5]" started-at="2025-08-06T08:42:26 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:26 GMT-07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.FundsTransferTest -->
    </test> <!-- ChromeTests -->
    <test started-at="2025-08-06T08:41:58 GMT-07:00" name="EdgeTests" finished-at="2025-08-06T08:43:44 GMT-07:00" duration-ms="106423">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="startExtentReport()[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:41:57 GMT-07:00" name="startExtentReport" finished-at="2025-08-06T08:41:58 GMT-07:00" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtentReport -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:41:58 GMT-07:00" name="setup" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="20225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:42:42 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:42 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:42:42 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:42 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:42:42 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:42 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginWithInvalidPassword()[pri:1, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:42:42 GMT-07:00" name="loginWithInvalidPassword" finished-at="2025-08-06T08:42:55 GMT-07:00" duration-ms="12981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:42:55 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:55 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidPassword status=SUCCESS method=LoginTest.loginWithInvalidPassword()[pri:1, instance:tests.LoginTest@3de8f619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:42:55 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:55 GMT-07:00" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithUnregisteredUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="loginWithUnregisteredUser()[pri:2, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:42:55 GMT-07:00" name="loginWithUnregisteredUser" finished-at="2025-08-06T08:43:06 GMT-07:00" duration-ms="11038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithUnregisteredUser -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:06 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:06 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithUnregisteredUser status=SUCCESS method=LoginTest.loginWithUnregisteredUser()[pri:2, instance:tests.LoginTest@3de8f619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="loginWithEmptyFields()[pri:3, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:06 GMT-07:00" name="loginWithEmptyFields" finished-at="2025-08-06T08:43:18 GMT-07:00" duration-ms="12511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithEmptyFields -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:06 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:43:06 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithEmptyFields() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:18 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:18 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithEmptyFields status=SUCCESS method=LoginTest.loginWithEmptyFields()[pri:3, instance:tests.LoginTest@3de8f619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:18 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:43:18 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithInvalidEmailFormat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="loginWithInvalidEmailFormat()[pri:4, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:18 GMT-07:00" name="loginWithInvalidEmailFormat" finished-at="2025-08-06T08:43:31 GMT-07:00" duration-ms="12542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidEmailFormat -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:31 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:31 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidEmailFormat status=SUCCESS method=LoginTest.loginWithInvalidEmailFormat()[pri:4, instance:tests.LoginTest@3de8f619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="loginWithValidCredentials()[pri:5, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:31 GMT-07:00" name="loginWithValidCredentials" finished-at="2025-08-06T08:43:44 GMT-07:00" duration-ms="12806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:31 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:43:31 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.loginWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:44 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:43:44 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=SUCCESS method=LoginTest.loginWithValidCredentials()[pri:5, instance:tests.LoginTest@3de8f619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:44 GMT-07:00" name="endLog" finished-at="2025-08-06T08:43:44 GMT-07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:44 GMT-07:00" name="teardown" finished-at="2025-08-06T08:43:44 GMT-07:00" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:tests.LoginTest@3de8f619]" started-at="2025-08-06T08:43:44 GMT-07:00" name="flushReport" finished-at="2025-08-06T08:43:45 GMT-07:00" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RequestLoanTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:20 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:20 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:20 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RequestLoanTest.testLoanExceedingLimit()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testLoanExceedingLimit()[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:20 GMT-07:00" name="testLoanExceedingLimit" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoanExceedingLimit -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:21 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoanExceedingLimit status=SUCCESS method=RequestLoanTest.testLoanExceedingLimit()[pri:0, instance:tests.RequestLoanTest@740fb309] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:21 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RequestLoanTest.testMissingLoanDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testMissingLoanDetails()[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:21 GMT-07:00" name="testMissingLoanDetails" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingLoanDetails -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:21 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMissingLoanDetails status=SUCCESS method=RequestLoanTest.testMissingLoanDetails()[pri:0, instance:tests.RequestLoanTest@740fb309] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="testValidLoanRequest()[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:28 GMT-07:00" name="testValidLoanRequest" finished-at="2025-08-06T08:42:29 GMT-07:00" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLoanRequest -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:28 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:28 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RequestLoanTest.testValidLoanRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:29 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:29 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLoanRequest status=SUCCESS method=RequestLoanTest.testValidLoanRequest()[pri:0, instance:tests.RequestLoanTest@740fb309] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.RequestLoanTest@740fb309]" started-at="2025-08-06T08:42:29 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:29 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.RequestLoanTest -->
      <class name="tests.CustomerSupportTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:24 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:24 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:24 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.CustomerSupportTest.testSubmitFormWithEmptyFields()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testSubmitFormWithEmptyFields()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:24 GMT-07:00" name="testSubmitFormWithEmptyFields" finished-at="2025-08-06T08:42:25 GMT-07:00" duration-ms="1685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitFormWithEmptyFields -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:25 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:25 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubmitFormWithEmptyFields status=SUCCESS method=CustomerSupportTest.testSubmitFormWithEmptyFields()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="testSubmitFormWithValidDetails()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:25 GMT-07:00" name="testSubmitFormWithValidDetails" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubmitFormWithValidDetails -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:25 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:25 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.CustomerSupportTest.testSubmitFormWithValidDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:27 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubmitFormWithValidDetails status=SUCCESS method=CustomerSupportTest.testSubmitFormWithValidDetails()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="testVerifySuccessMessage()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:29 GMT-07:00" name="testVerifySuccessMessage" finished-at="2025-08-06T08:42:30 GMT-07:00" duration-ms="1157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifySuccessMessage -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:29 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:29 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.CustomerSupportTest.testVerifySuccessMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:30 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:30 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifySuccessMessage status=SUCCESS method=CustomerSupportTest.testVerifySuccessMessage()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.CustomerSupportTest@7bd7d6d6]" started-at="2025-08-06T08:42:30 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:30 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.CustomerSupportTest -->
      <class name="tests.AccountTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:30 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:30 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method signature="viewCheckingAccountSummary()[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:30 GMT-07:00" name="viewCheckingAccountSummary" finished-at="2025-08-06T08:42:33 GMT-07:00" duration-ms="3513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewCheckingAccountSummary -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:30 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:30 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AccountTest.viewCheckingAccountSummary() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:30 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:30 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:33 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:33 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewCheckingAccountSummary status=SUCCESS method=AccountTest.viewCheckingAccountSummary()[pri:0, instance:tests.AccountTest@2ab4bc72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:33 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:33 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.AccountTest.viewSavingsAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="viewSavingsAccountSummary()[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:33 GMT-07:00" name="viewSavingsAccountSummary" finished-at="2025-08-06T08:42:42 GMT-07:00" duration-ms="8581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewSavingsAccountSummary -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:33 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:33 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:42 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:42 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewSavingsAccountSummary status=SUCCESS method=AccountTest.viewSavingsAccountSummary()[pri:0, instance:tests.AccountTest@2ab4bc72] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.AccountTest@2ab4bc72]" started-at="2025-08-06T08:42:42 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:42 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.AccountTest -->
      <class name="tests.TransactionSearchTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:21 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:21 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSearchByAmount()[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:21 GMT-07:00" name="testSearchByAmount" finished-at="2025-08-06T08:42:23 GMT-07:00" duration-ms="1237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByAmount -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:21 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:21 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.TransactionSearchTest.testSearchByAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:23 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:23 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchByAmount status=SUCCESS method=TransactionSearchTest.testSearchByAmount()[pri:0, instance:tests.TransactionSearchTest@eadd4fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:23 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:23 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.TransactionSearchTest.testSearchByDate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method signature="testSearchByDate()[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:23 GMT-07:00" name="testSearchByDate" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByDate -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:24 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchByDate status=SUCCESS method=TransactionSearchTest.testSearchByDate()[pri:0, instance:tests.TransactionSearchTest@eadd4fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.TransactionSearchTest@eadd4fb]" started-at="2025-08-06T08:42:24 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:24 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
      </class> <!-- tests.TransactionSearchTest -->
      <class name="tests.FundsTransferTest">
        <test-method is-config="true" signature="startLog()[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:18 GMT-07:00" name="startLog" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startLog -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:18 GMT-07:00" name="setUp" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidFundTransfer()[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:18 GMT-07:00" name="testInvalidFundTransfer" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="1977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidFundTransfer -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:18 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:18 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FundsTransferTest.testInvalidFundTransfer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:20 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:20 GMT-07:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidFundTransfer status=SUCCESS method=FundsTransferTest.testInvalidFundTransfer()[pri:0, instance:tests.FundsTransferTest@4e5ed836] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
        <test-method signature="testValidFundTransfer()[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:27 GMT-07:00" name="testValidFundTransfer" finished-at="2025-08-06T08:42:28 GMT-07:00" duration-ms="1248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFundTransfer -->
        <test-method is-config="true" signature="createExtentTest(java.lang.reflect.Method)[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:27 GMT-07:00" name="createExtentTest" finished-at="2025-08-06T08:42:27 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.FundsTransferTest.testValidFundTransfer()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtentTest -->
        <test-method is-config="true" signature="endLog()[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:28 GMT-07:00" name="endLog" finished-at="2025-08-06T08:42:28 GMT-07:00" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endLog -->
        <test-method is-config="true" signature="captureTestResult(org.testng.ITestResult)[pri:0, instance:tests.FundsTransferTest@4e5ed836]" started-at="2025-08-06T08:42:28 GMT-07:00" name="captureTestResult" finished-at="2025-08-06T08:42:28 GMT-07:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidFundTransfer status=SUCCESS method=FundsTransferTest.testValidFundTransfer()[pri:0, instance:tests.FundsTransferTest@4e5ed836] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureTestResult -->
      </class> <!-- tests.FundsTransferTest -->
    </test> <!-- EdgeTests -->
  </suite> <!-- Parabank Test Suite -->
</testng-results>
